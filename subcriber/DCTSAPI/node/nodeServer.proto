syntax = "proto3";

package zb.dcts.node.server;

import "dcts.proto";
import "node/node.proto";
import "google/protobuf/empty.proto";

message ServerTaskElapsedTime
{
    int32 time_from_created = 4;//自任务创建起流逝的时间（秒）
    int32 time_from_last_product = 6;//自最近一次节点上传数据起流逝的时间（秒），-1代表尚无数据上传
    int32 time_from_last_consume = 7;//自最近一次客户端访问起流逝的时间（秒），-1代表尚无客户端访问
}

//任务摘要
message ServerTaskSummary 
{
    TaskId id = 1;        //任务id
    TaskType type = 2;    //任务类型
    repeated NodeDevice task_runner = 3; //有效执行该任务的节点
    int32 buffer_size = 4;              //缓冲待取的数据包个数
    ServerTaskElapsedTime time_measument = 5; //任务的时间度量
}

message ServerTasksInfo
{
    repeated ServerTaskSummary tasks = 1;
}

//节点控制指令类型
enum NodeControlType
{
    REBOOT_NODE = 0;         //重启节点系统
    SHUTDOWN_NODE = 1;      //关闭节点系统
    ABORT_ALL = 2;          //停止所有任务
    SELF_TEST = 3;          //自检
    RENAME = 4;             //更名
}

//节点控制请求与响应
message NodeControl
{
    NodeId node_id = 1;
    NodeControlType control_type = 2;
    string detail = 3;
}

// 通用管理的API
service GeneralService 
{
    rpc ListAllNodes(google.protobuf.Empty) returns (NodesInfo) {}// 枚举所有节点
    rpc GetNodeInfo(NodeId) returns (NodeInfo) {}// 根据id获得节点信息
    rpc PostNodeControl(NodeControl) returns (google.protobuf.Empty) {}// 节点控制
    rpc GetNodeControlLastReply(NodeId) returns(NodeControl){}// 获取节点控制响应              
    rpc ListAllTasks(google.protobuf.Empty) returns (ServerTasksInfo) {}// 枚举所有服务中的任务
    rpc GetTaskSumary(TaskId) returns (ServerTaskSummary) {}// 根据任务id获得任务摘要
    rpc AbortOne(TaskId) returns (google.protobuf.Empty){}// 终止任务
    rpc AbortAll(google.protobuf.Empty) returns(google.protobuf.Empty){} // 终止所有任务
}